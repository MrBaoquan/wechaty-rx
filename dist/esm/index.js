import{fromEventPattern as t,zip as o,from as e,Observable as n}from"rxjs";import{Wechaty as s}from"wechaty";import r from"qrcode-terminal";class a{constructor(t){this.sys_contacts=["漂流瓶","朋友推荐消息","微信运动","语音记事本","公众平台安全助手","未命名公众号","微信团队"],this.bot=t,this.registerInnerEvents()}get Bot(){return this.bot}get Name(){return this.bot.name()}async Start(){return console.log("bot start..."),new Promise((t=>{this.bot.start().catch((async t=>{console.error("Bot start() fail:",t),await this.bot.stop()})),this.OnReady().subscribe((async()=>{console.log("bot ready..."),await this.QuitAllRoomIfEmpty(),t(this)}))}))}OnLogin(){return t((t=>this.bot.addListener("login",t)),(t=>this.bot.removeListener("login",t)))}OnScan(){return t((t=>this.bot.addListener("scan",t)),(t=>this.bot.removeListener("scan",t)))}OnReady(){return t((t=>{this.bot.addListener("ready",t),console.log("add on ready listener...")}),(t=>{this.bot.removeListener("ready",t),console.log("remove on ready listener...")}))}OnMessage(){return t((t=>{this.bot.addListener("message",t)}),(t=>{this.bot.removeListener("message",t)}))}async QuitAllRoomIfEmpty(){const t=await this.bot.Room.findAll();return o(...t.map((t=>e(this.quitRoomIfEmpty(t))))).toPromise()}IsNormalContact(t){return(null==t.type()||t.type()==this.bot.Contact.Type.Unknown)&&!this.sys_contacts.includes(t.name())}async quitRoomIfEmpty(t){(await t.memberAll()).length>1||await t.quit()}registerInnerEvents(){const t=this;this.bot.on("login",(function(o){t.onLogin(o)})).on("scan",(function(o,e){t.onScan(o,e)})).on("error",this.onError)}onScan(t,o){r.generate(t,{small:!0});const e=["https://api.qrserver.com/v1/create-qr-code/?data=",encodeURIComponent(t)].join("");console.log(`[${o}] ${e}\nScan QR Code above to log in: `)}onLogin(t){console.log(`${t.name()} login...`)}onError(t){console.error("Bot error:",t)}}class i{static Bootstrap(t){return new Promise((n=>{this.bots=new Map(t.map((t=>[t.name??"default_robot",new a(new s(t))])));const r=Array.from(this.bots.values());o(...r.map((t=>e(t.Start())))).subscribe((()=>{console.log("Bot ready ..."),n(this)}))}))}static OnMessage(){return new n((t=>{Array.from(this.bots.values()).map((o=>{o.OnMessage().subscribe((e=>{t.next([e,o])}))}))}))}}i.bots=new Map;export{i as BotManager,a as WechatBot};
