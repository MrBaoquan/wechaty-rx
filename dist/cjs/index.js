"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var t=require("rxjs"),e=require("wechaty");function o(t){return t&&"object"==typeof t&&"default"in t?t:{default:t}}var n=o(require("qrcode-terminal"));class r{constructor(t){this.sys_contacts=["漂流瓶","朋友推荐消息","微信运动","语音记事本","公众平台安全助手","未命名公众号","微信团队"],this.bot=t,this.registerInnerEvents()}get Bot(){return this.bot}get Name(){return this.bot.name()}async Start(){return console.log("bot start..."),new Promise((t=>{this.bot.start().catch((async t=>{console.error("Bot start() fail:",t),await this.bot.stop()})),this.OnReady().subscribe((async()=>{console.log("bot ready..."),await this.QuitAllRoomIfEmpty(),t(this)}))}))}OnLogin(){return t.fromEventPattern((t=>this.bot.addListener("login",t)),(t=>this.bot.removeListener("login",t)))}OnScan(){return t.fromEventPattern((t=>this.bot.addListener("scan",t)),(t=>this.bot.removeListener("scan",t)))}OnReady(){return t.fromEventPattern((t=>{this.bot.addListener("ready",t),console.log("add on ready listener...")}),(t=>{this.bot.removeListener("ready",t),console.log("remove on ready listener...")}))}OnMessage(){return t.fromEventPattern((t=>{this.bot.addListener("message",t)}),(t=>{this.bot.removeListener("message",t)}))}async QuitAllRoomIfEmpty(){const e=await this.bot.Room.findAll();return t.zip(...e.map((e=>t.from(this.quitRoomIfEmpty(e))))).toPromise()}IsNormalContact(t){return(null==t.type()||t.type()==this.bot.Contact.Type.Unknown)&&!this.sys_contacts.includes(t.name())}async quitRoomIfEmpty(t){(await t.memberAll()).length>1||await t.quit()}registerInnerEvents(){const t=this;this.bot.on("login",(function(e){t.onLogin(e)})).on("scan",(function(e,o){t.onScan(e,o)})).on("error",this.onError)}onScan(t,e){n.default.generate(t,{small:!0});const o=["https://api.qrserver.com/v1/create-qr-code/?data=",encodeURIComponent(t)].join("");console.log(`[${e}] ${o}\nScan QR Code above to log in: `)}onLogin(t){console.log(`${t.name()} login...`)}onError(t){console.error("Bot error:",t)}}class s{static Bootstrap(o){return new Promise((n=>{this.bots=new Map(o.map((t=>[t.name??"default_robot",new r(new e.Wechaty(t))])));const s=Array.from(this.bots.values());t.zip(...s.map((e=>t.from(e.Start())))).subscribe((()=>{console.log("Bot ready ..."),n(this)}))}))}static OnMessage(){return new t.Observable((t=>{Array.from(this.bots.values()).map((e=>{e.OnMessage().subscribe((o=>{t.next([o,e])}))}))}))}}s.bots=new Map,exports.BotManager=s,exports.WechatBot=r;
